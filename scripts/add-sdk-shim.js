// scripts/add-sdk-shim.js    (plain CommonJS – no import syntax)

/**
 * Generates client/index.js so CommonJS `require()` works in the pkg snapshot.
 * Run during CI *after* `npm ci`.
 */
const { writeFileSync, mkdirSync, existsSync } = require("fs");
const { dirname, join } = require("path");

const BASE = "node_modules/@modelcontextprotocol/sdk/client";
const mjs = join(BASE, "index.mjs");
const cjs = join(BASE, "index.js");

// If the SDK ships only index.mjs, create a CJS wrapper.
// If it already has index.js|index.cjs with real code, do nothing.
if (existsSync(mjs) && !existsSync(cjs)) {
  mkdirSync(dirname(cjs), { recursive: true });
  writeFileSync(
    cjs,
    `// Auto-generated by CI – bridges ESM ▶ CJS for pkg\n` +
      `const { createRequire } = require('module');\n` +
      `module.exports = createRequire(__filename)('./index.mjs');\n`,
    "utf8",
  );
  console.log("✅  Wrote client/index.js shim");
} else {
  console.log("ℹ️  client/index.js already present – nothing to do");
}
