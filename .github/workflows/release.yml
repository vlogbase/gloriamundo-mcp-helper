name: Build & Publish MCP Helper

on:
  push:
    tags: ['v*']          # run only on version tags (v0.2.22, v1.0.0 â€¦)

permissions:
  contents: write         # create / update releases

jobs:
  build:
    name: build (${{ matrix.target }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: node18-linux-x64
          - os: macos-14
            target: node18-macos-arm64
          - os: macos-14
            target: node18-macos-x64
          - os: windows-latest
            target: node18-win-x64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Use Node 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install deps & transpile
        run: |
          npm ci
          npm run build            # produces dist/host.js

      - name: Package binary with pkg
        shell: bash
        run: |
          OUT="dist/pkg/gm-mcp-host-${{ matrix.target }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          npx pkg dist/host.js --targets ${{ matrix.target }} --output "$OUT"

      - name: Smoke test Windows binary
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          $exe = "dist/pkg/gm-mcp-host-${{ matrix.target }}.exe"
          $p   = Start-Process $exe `
                   -RedirectStandardOutput helper.out `
                   -RedirectStandardError  helper.err `
                   -PassThru
          Start-Sleep -Seconds 5
          try {
            $resp = Invoke-WebRequest -Uri http://127.0.0.1:9000/health -UseBasicParsing
            if ($resp.StatusCode -ne 200) {
              throw "status code $($resp.StatusCode)"
            }
          } finally {
            if (Get-Process -Id $p.Id -ErrorAction SilentlyContinue) {
              Stop-Process -Id $p.Id
            }
            Write-Host "---- Helper stdout ----"
            if (Test-Path helper.out) { Get-Content helper.out }
            Write-Host "---- Helper stderr ----"
            if (Test-Path helper.err) { Get-Content helper.err }
          }

      - name: Upload packaged binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: dist/pkg/gm-mcp-host-${{ matrix.target }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  publish:
    name: Publish release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/gm-mcp-host-*
